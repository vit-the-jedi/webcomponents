import{E as p,S as g}from"./observers.js";const s=new p;class h extends HTMLElement{constructor(){super(),this._listeners={},this.observers={},this._progressState={},this._configs={},this._devMode=!0,this.addObserver(new g,"state"),this.addObserver(s,"event")}set setProgressState(t){this.log("setting progress state"),this.log(t),this._progressState=t}get getProgressState(){return this._progressState}set percentcomplete(t){this._progressState.percentcomplete=t}get percentcomplete(){return this._progressState.percentcomplete}set setStepsRemaining(t){this._progressState.stepsRemaining=t}get getStepsRemaining(){return this._progressState.stepsRemaining}set configs(t){this._configs=t}get configs(){return this._configs}get componentType(){return this.configs.type}set impressurePageId(t){this.impressurePageHistory.push(t)}addObserver(t,e){this.observers[e]||(this.observers[e]=[]),this.observers[e].push(t)}removeObserver(t){const e=this.observers.indexOf(t);e>-1&&this.observers.splice(e,1)}notifyStateUpdate(t){this.observers.state.forEach(async e=>e.update(t,this))}log(t){this._devMode&&console.log(t)}isImpressureEmbedded(){return window.top.Impressure}pushImpressurePageId(){}async initState(t){let e=null;if(Object.keys(s.getEventListeners).length>0)for(const n of Object.keys(s.getEventListeners))e=[],e.push(n);s.createComponentCreationEventLoop(e),s.createComponentDestructionEventLoop(),this.isImpressureEmbedded()&&(this.impressurePageHistory=[]),this.configs=t;const r=JSON.parse(sessionStorage.getItem("custom-component__state"));if(r)this.setProgressState=r._progressState,this.configs=r._configs;else{const n=this.configs.steps,o=this.configs.type,i=this.configs.max,a=Number((o==="steps"?1:i/n).toFixed(2));this.setProgressState={activeStep:0,numOfSteps:n,stepIncrement:a,steps:new Map,percentcomplete:0,maxValue:i,stepsRemaining:n}}s.dispatchEvents("create",this)}setStepToList(t,e){this._progressState.steps.set(t,e)}getStepFromList(t){return this._progressState.steps.get(t)}getStepsListFromState(){return this._progressState.steps}setActiveStepInState(){let t;const e=this.getProgressState;e!=null&&e.pause&&(e==null?void 0:e.pause)!==0?t=Number((e.activeStep+e.stepIncrement/e.stepChange).toFixed(2)):t=e.activeStep+e.stepIncrement>e.maxValue?e.maxValue:e.activeStep+e.stepIncrement,e.activeStep=t}setStepsRemainingInState(){this.setStepsRemaining=Math.max(this.getStepsRemaining-1,0)}updateComponent(t){this.percentcomplete=t,this.setAttribute("percentcomplete",t)}mountComponent(){return new Promise(t=>{this.getAnchorPoint(this.configs.anchorPoint).then(e=>{e.parentElement.insertBefore(this,e.nextElementSibling)}).then(()=>{t()})})}unmountComponent(){this&&this.parentElement&&this.parentElement.removeChild(this)}getState(){return{_progressState:this.getProgressState,_listeners:this._listeners,_configs:this.configs}}saveState(){sessionStorage.setItem("custom-component__state",JSON.stringify(this.getState()))}removeKeysFromState(t){for(const e of t)delete this.getProgressState[e]}createGlobalStyles(){const t=`
        .progress-wrapper {
            transition-property: all;
            transition-duration: ${this.configs.transitionDuration/1e3}s;
            transition-timing-function: ease-in;
            opacity: 1;
        }
        .updating {
            opacity: 0;
        }
        `,e=document.createElement("style");return e.textContent=t,e}}export{h as P};
